/* 데이트베이스개요

DATA : 관찰 결과로 나타난 정량적 혹은 정성적인 실제 값

정보 : 데이터를 기반으로 의미를 부여한 것

DATABASE : 한 조직에 필요한 정보를 여러 응용 시스템에서 공용할 수 있도록
논리적으로 연관된 데이터를 모으고 중복되는 데이터를 최소화하여
구조적으로 통합/저장해놓은 것

DBMS : 데이터베이스에서 데이터 추출, 조작, 정의, 제어 등을 할 수 있게 해주는 데이터베이스 전용 관리 프로그램

DATABASE 유형
계층형 데이터베이스 : 트리 형태의 계층적 구조를 가진 데이터베이스로 최상위 계층의 데이터부터 검색하는 구조
네트워크형 데이터베이스 : 하위 데이터들끼리의 관계까지 정의할 수 있는 구조로 설계 및 구현이 복잡하고 어려움
관계형 데이터베이스 : 모든 데이터를 2차원 테이블 형태로 표현하고 테이블 사이의 비즈니스적 관계를 도출하는 구조
데이터의 중복을 최소화 할 수 있으며 업무 변화에 대한 적응력 우수

객체-관계형 데이터베이스
1. 사용자 정의 타입 지원
사용자가 임의로 정한 데이터 유형으로 기본형을 넘어 다양한 형태의 데이터를 다룰 수 있음
2. 참조(reference)타입 지원
객체들로 이루어진 객체 테이블의 경우 하나의 레코드가 다른 레코드를 참조할 수 있는 것
3. 중첩 테이블 지원
테이블을 구성하는 로우(row)자체가 또 다른 테이블로 구성되는 테이블을 지원하며
조금 더 복잡하고 복합적인 정보 표현 가능
4. 대단위 객체의 저장 및 추출 가능
이미지, 오디오, 비디오 등 저장하기 위한 대단위 객체(LOB) 지원
5. 객체간의 상속관계 지원
오라클의 경우 OBJECT타입을 지원함으로써 상속 기능을 구현하고 있음

--------------------------------------------

DML(SELECT)

SQL(Structured Query Language) : 관계형 데이터베이스에서 데이터를 조회하거나 조작하기 위해 사용하는 표준 검색 언어
원하는 데이터를 찾는 방법이나 절차를 기술하는 것이 아닌 조건을 기술하여 작성

SELECT : 데이터를 조회한 결과를 Result Set이라고 하는데 SELECT구문에 의해 조회된 행들의 집합을 의미.
Result Set은 0개 이상의 행이 포함될 수 있고 Result Set은 특정한 기준에 의해 정렬 가능.
한 테이블의 특정 컬럼, 특정 행, 특정 행/컬럼 또는 여러 테이블의 특정 행/컬럼 조회 가능

[SELECT 작성법]
SELECT 컬럼 명 [, 컬럼명, ...]
FROM 테이블 명
WHERE 조건식;

리터럴 = '' : 임의로 지정한 문자열을 SELECT절에 사용하면 테이블에 존재하는 데이터처럼 활용 가능
DISTINCT : 컬럼에 포함된 데이터 중 중복 값을 제외하고 한 번씩만 표시하고자 할 때 사용

연결 연산자 : ‘||’를 사용하여 여러 컬럼을 하나의 컬럼인 것처럼 연결하거나 컬럼과 리터럴을 연결함
논리 연산자 : 여러 개의 제한 조건 결과를 하나의 논리 결과로 만들어줌
비교 연산자 : 표현식 사이의 관계를 비교하기 위해 사용하고 비교 결과는 논리 결과(TRUE/FALSE/NULL) 중 하나가 됨
단 비교하는 두 컬럼 값/표현식은 서로 동일한 데이터 타입이어야 함
BETWEEN AND : 비교하려는 값이 지정한 범위에 포함되면 TRUE를 리턴하는 연산자로
상한 값과 하한 값의 경계도 포함됨
LIKE : 비교하려는 값이 지정한 특정 패턴을 만족하면 TRUE를 리턴하는 연산자로
‘%’와 ‘_’를 와일드카드로 사용

----------------------------------------------

함수(FUNCTION)

함수 : 하나의 큰 프로그램에서 반복적으로 사용되는 부분들을 분리하여 작성해 놓은 작은 서브 프로그램
호출하며 값을 전달하면 결과를 리턴하는 방식으로 사용

문자 처리 함수
LENGTH : 주어진 컬럼 값/문자열의 길이(문자 개수) 반환
INSTR : 지정한 위치부터 지정한 숫자 번째로 나타나는 문자의 시작 위치 반환
LTRIM/RTRIM : 주어진 컬럼, 문자열의 왼쪽/오른쪽에서 지정한 STR에 포함된 모든 문자를 제거한 나머지 반환
TRIM :  주어진 컬럼, 문자열의 앞/뒤/양쪽에 있는 지정한 문자를 제거한 나머지 반환
SUBSTR : 컬럼이나 문자열에서 지정한 위치부터 지정한 개수의 문자열을 잘라내어 반환
LPAD/RPAD : 주어진 컬럼, 문자열에 임의의 문자열을 왼쪽/오른쪽에 덧붙여 길이 N의 문자열 반환
LOWER/UPPER/INITCAP : 컬럼의 문자 혹은 문자열을 소문자/대문자/첫 글자만 대문자로 변환하여 반환

숫자 처리 함수
ABS : 인자로 전달 받은 숫자의 절대값 반환
MOD : 인자로 전달 받은 숫자를 나누어 나머지 반환
ROUND : 인자로 전달 받은 숫자 혹은 컬럼에서 지정한 위치부터 반올림하여 값 반환
FLOOR : 인자로 전달 받은 숫자 혹은 컬럼에서 소수점 자리의 수를 버림 후 반환
TRUNC : 인자로 전달 받은 숫자 혹은 컬럼에서 지정한 위치부터의 자리의 수를 버리고(절삭) 반환
CEIL : 인자로 전달 받은 숫자 혹은 컬럼을 올림 후 반환

날짜 처리 함수
SYSDATE : 시스템에 저장되어 있는 현재 날짜 반환
MONTHS_BETWEEN : 인자로 날짜 두 개를 전달받아 개월 수 차이를 숫자 데이터형으로 반환
ADD_MONTHS : 인자로 전달받은 날짜에 인자로 받은 숫자만큼 개월 수를 더하여 특정 날짜 반환
LAST_DAY : 인자로 전달받은 날짜가 속한 달의 마지막 날짜 반환
EXTRACT : 년, 월, 일 정보 추출하여 반환

형 변환 함수
TO_CHAR : 날짜 혹은 숫자형 데이터를 문자형 데이터로 변환하여 반환
TO_DATE : 숫자 혹은 문자형 데이터를 날짜형 데이터로 변환하여 반환
TO_NUMBER : 날짜 혹은 문자형 데이터를 숫자형 데이터로 변환하여 반환

NULL 처리 함수
NVL : NULL로 되어 있는 컬럼의 값을 인자로 지정한 숫자 혹은 문자로 변경하여 반환

선택 함수
DECODE : 비교하고자 하는 값 또는 컬럼이 조건식과 같으면 결과 값 반환
CASE : 비교하고자 하는 값 또는 컬럼이 조건식과 같으면 결과 값 반환(조건은 범위 값 가능)

그룹 함수
SUM : 해당 컬럼 값들의 총합 반환 (그룹의 누적 합계 반환)
AVG : 해당 컬럼 값들의 평균 반환 (그룹의 평균 반환)
COUNT : 테이블 조건을 만족하는 행의 개수 반환 (그룹의 총 개수 반환)
MAX : 그룹의 최대값 반환
MIN : 그룹의 최소값 반환

-----------------------------------------------------

GROUP BY



